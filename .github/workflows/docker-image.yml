name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]


jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4    

    - run: |
        echo "CONTAINER_NAME=wkstagg-test" >> $GITHUB_ENV
        echo "CONTAINER_TAG=$(date +%s)" >> $GITHUB_ENV
      name: Set container name

    - name: Docker Setup Docker
        # You may pin to the exact commit or the version.
        # uses: docker/setup-docker-action@370a7dad4b8ce8dbf00f9363e1652e5074dd6abe
      uses: docker/setup-docker-action@v4.1.0
      with:
        # Docker daemon JSON configuration
        daemon-config: |
            {
            "debug": true,
            "experimental": true,
                "features": {
                "containerd-snapshotter": true
                }
            }

          
    - name: Get socket path
      run: |
          url=$(docker context inspect | jq -r .[0].Endpoints.docker.Host)
          socket_path=$(echo "$url" | awk -F// '{print $2}')
          echo "$socket_path"
          echo "SOCKET=$socket_path" >> $GITHUB_ENV

    #- run: echo $(CONTAINER_NAME); docker build . --file Dockerfile --tag $CONTAINER_NAME
    #  name: Build the Docker image

    - name: Build and push Docker images
        # You may pin to the exact commit or the version.
        # uses: docker/build-push-action@48aba3b46d1b1fec4febb7c5d0c644b249a11355
      uses: docker/build-push-action@v6.10.0
      with:
        # Build's context is the set of files located in the specified PATH or URL
        context: .
        # List of output destinations (format: type=local,dest=path)
        outputs: type=docker
        # List of tags
        tags: docker.io/library/${{ env.CONTAINER_NAME }}:${{ env.CONTAINER_TAG }} 
               
      
    - 
      name: Generate Trivy Report 
      uses: aquasecurity/trivy-action@0.29.0
      with: 
         scan-type: "image" 
         format: "json" 
         output: "report.json" 
         ignore-unfixed: true 
         vuln-type: "os" 
         image-ref: ${{ env.CONTAINER_NAME }}:${{ env.CONTAINER_TAG }}
         # unix domain socket path to use for docker scanning, ex. unix:///var/run/docker.sock
         docker-host: unix:///${SOCKET}

       # check whether there are any OS package vulnerabilities 
    -
      name: Check vulnerability count 
      id: vuln_count 
      run: | 
        report_file="report.json" 
        vuln_count=$(jq 'if .Results then [.Results[] | select(.Class=="os-pkgs" and .Vulnerabilities!=null) | .Vulnerabilities[]] | length else 0 end' "$report_file") 
        echo "vuln_count=$vuln_count" >> $GITHUB_OUTPUT 

       # copa action will only run if there are vulnerabilities 
    - 
      name: Run Copa action 
      if: steps.vuln_count.outputs.vuln_count != '0' 
      id: copa 
      uses: project-copacetic/copa-action@v1.2.1
      with: 
        image: ${{ env.CONTAINER_NAME }}:${{ env.CONTAINER_TAG }}
        image-report: "report.json" 
        patched-tag: "patched" 
        timeout: "5m" # optional, default is 5m 
        output: vex.json # optional 
        format: "openvex" # optional, default is openvex 
         # copa-version: "0.6.0" # optional, default is latest 
         # buildkit-version: "v0.12.4" # optional, default is latest 
        custom-socket: ${SOCKET} # optional, used for custom socket address 
    - 
      name: Generate Trivy Report (POST)
      uses: aquasecurity/trivy-action@0.29.0 
      with: 
         scan-type: "image" 
         format: "json" 
         output: "report.json" 
         ignore-unfixed: true 
         vuln-type: "os" 
         image-ref: ${{ env.CONTAINER_NAME }}:patched
         # unix domain socket path to use for docker scanning, ex. unix:///var/run/docker.sock
         docker-host: unix:///${SOCKET}
